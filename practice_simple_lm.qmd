---
title: "Practice: Simple Linear Regression"
author: 
  - "Cade Garcia"
  - "DS303, SP25"
  - "Prof. Amber Camp"
date: 1/17/25
format: html
editor: visual
theme: spacelab
---

## Introduction to Simple Linear Regression

This is an introduction to **simple linear regression**, a method used to model the relationship between two variables by fitting a straight line to the data. The goal is to see how one variable (the independent variable) affects another (the dependent variable).

For example, you might predict a student’s test score (dependent variable) based on study hours (independent variable). Simple linear regression helps find a trend or regression line that best fits the data, allowing you to make predictions for varying study hours.

Simple linear regression is useful for studying **cause-and-effect** or **making predictions**, especially when the relationship between the variables is linear. It works best with **continuous data**.

## *y* = *mx* + *b* ?

We talked a lot in class the other day about the basic regression equation. I presented it as:

*y* = *b~0~* + *b~1~x*

Many of you quickly noticed the similarity between *y* = *b~0~* + *b~1~x* and *y* = *mx* + *b.* And you're right–they are both basically the same formula for a straight line. Is there any actual difference at all?

Yes! Despite, again, basically being the same thing, the difference in notation depends on context (when we use the two and how we discuss them). See what you can find online about this, and feel free to discuss with those around you.

### Question 1

What is the difference between *y* = *b~0~* + *b~1~x* and *y* = *mx* + *b*, and when might we use one over the other? Please use your own words

#### Answer: They are very similar both having a slope multiplied by an independent variable and an intercept. The difference is that one is for slope and the other is for regression. Slope intercept finds a mathematical relationship whereas the regression equation uses estimated data as parameters.

### Question 2

Think back to our class discussion and your previous studies in math. Tell me below what each part of the equation *y* = *b~0~* + *b~1~x* means. Do this from memory if you can!

#### Answer: *b~0~* is the intercept and *b~1~* is the slope, x is the independent variable.

## Let's try it

Let's start by loading the `MASS` and `ISLR2` packages, which are very large collections of data sets and functions. You may need to install `ISLR2` and `lme4`.

```{r, echo = FALSE, message = FALSE}
# install.packages("ISLR2")
# install.packages("lme4")

library(MASS)
library(ISLR2)
library(lme4)
library(ggplot2)
```

## Boston Housing Data

The `ISLR2` library contains the `Boston` data set, which records `medv` (median house value) for 506 census tracts in Boston. We will seek to predict `medv` using 12 predictors such as `rmvar` (average number of rooms per house), `age` (proportion of owner-occupied units built prior to 1940) and `lstat` (percent of households with low socioeconomic status).

### Question 3

You can just call upon the data (it's already in the package). I'll get you started, but show me below how you'd explore the data even further by adding code in the below code chunk.

```{r}
head(Boston)
#how i would see all the columns and rows
View(Boston)
```

We learned in class that we can apply a simple linear regression using `lm`. Here is the basic format:

```{r}
model <- lm(y ~ x, data=df)
```

### Question 4

Use the above basic format to create a linear regression model to predict the **median home value** (medv) based on the **percentage of lower status population** (lstat), using the data from the 'Boston' dataset. Assign it to the variable `lm.model`.

```{r}
lm.model <- lm(medv ~ lstat, data = Boston)
```

If you set it up right, you should be able to run your model name in the below code chunk and view the basic model output. Give it a try:

```{r}
lm.model
```

### Question 5

What is your model output telling you?

#### Answer

34.55 is the the intercept (b in y=mx+b). -0.95 is the slope (mx in y=mx+b). Its saying the median home value decreases by 0.95 for every 1 increase in lower status population.

You can also try `summary(lm.model)`.

```{r}
summary(lm.model)
```

### Question 6

What additional information do you get from this summary of the model output?

#### Answer

You get the min and max values in the data which allows you to view outliers instead of medians. You also get Standard deviation error which is the error estimate that our model output was due to chance; 0.5 is pretty low which I think means this model had a dependable outcome. The summary function also has t value which im unsure what that does.

## confint() and predict()

In order to obtain a confidence interval for the coefficient estimates, we can use the `confint()` command. The `predict()` function can be used to produce confidence intervals and prediction intervals for the prediction of `medv` for a given value of `lstat`. Run these and see if you can figure out what it is telling you.

```{r}
confint(lm.model)

predict(lm.model, data.frame(lstat = (c(5, 10, 15))), interval = "confidence")

predict(lm.model, data.frame(lstat = (c(5, 10, 15))), interval = "prediction")
```

### Question 7

What do you think the above `confint()` and `predict()` information means? It's okay to guess.

#### Answer

I think confint() and predict() gives confidence and prediction values for our outputs which tells us how accurate the model is?

## Visualizing

Here is a simple base R way to plot this data:

```{r}
plot(Boston$lstat, Boston$medv)
abline(lm.model)
```

### Question 8

Can you convert the above code chunk to `ggplot`? Try below. Have fun with editing the appearance of your plot if you'd like :)

```{r}
ggplot(data = Boston, aes(x = lstat, y = medv)) +
  geom_point() +  # Scatter plot
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(title = "Scatterplot of lstat vs medv with Regression Line",
       x = "Percent of households with low socioeconomic status",
       y = "Median house value") +
  theme_minimal()
```

In a future class, we'll explore some diagnostic plots and what that means for evaluating models. For now, just run the below and have a look:

```{r}
par(mfrow = c(2, 2))
plot(lm.model)
```

## Run another model

Now it's your turn to apply a linear regression to other variables from the Boston dataset.

First, view the dataset. Where can you find information about these variables?

```{r}
View(Boston)
```

### Question 9

What variables are you interested in exploring using a linear regression? Just pick an `x` and a `y` and describe your research question below in plain English:

#### Answer

Criminal rate and Age

### Question 10

#### Part 1

Build and run your model, examine the model output:

```{r}
#model <- lm(y ~ x, data=df)

Q10model <- lm(crim ~ age, data = Boston)

summary(Q10model)
```

#### Part 2

Explain what you found in plain English. Do your best.

#### Answer

Criminal rate increases by 0.10779 for every 1 increase in age. Our model states a very significant P-value which means this is a good model. The variation in our data is decent. The R squared value is low but for the age variable, the model fits enough. F-Statistic = 71.62 is good!

## The end!

That's it for now. Please feel free to raise questions in class or via email!

## Feb 3 Classwork

```{r}
library(MASS)
library(ISLR2)
library(lme4)
library(ggplot2)

m1 <- lm(crim ~ rm + ptratio + medv, data = Boston)
summary(m1)
```

### Findings

There is a **low** **correlation** between per capita crime rate by town and the average number of rooms per dwelling. However, there is a high correlation between per capita crime rate by town and pupil-teacher ratio by town. The increase is 0.4970 per capita crime rate by town for every 1 increase in pupil-teacher ratio.
